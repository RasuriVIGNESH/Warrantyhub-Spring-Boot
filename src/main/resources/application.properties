spring.application.name=WarrantyHub API
# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/warrantyhub
spring.datasource.username=root
spring.datasource.password=krishna@0559

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# MySQL Configuration
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# JPA / Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# CORS Configuration
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*

# JWT Configuration
app.jwt.secret=i5HtknFB1dZYSB+V2qYlYo9kNRl0/2z1G2XLHV9N36CGBPaXa2mcwMIy7ZoZ6/zy2Jzazv2ln0QDRM/90blV6w==
app.jwt.expiration=86400000

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=15MB
file.upload-dir=./uploads



logging.level.your.jwt.package=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG

# OAuth2 Configuration for Google
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:IDENT_ID_HERE}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:SECRET_KEY}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

